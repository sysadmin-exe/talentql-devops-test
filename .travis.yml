sudo: required

# Define environment
dist: focal # Ubuntu 20.04
language: bash

# Export variables
env:
  - IMAGE_NAME=azure-module-template tf_version=0.14.0 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false"

# Only build pushes to master branch
branches:
  only:
    - main

# Install dependencies
before_install:
  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip
  - terraform --version

# Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    - stage: terraform plan and server test
      # Only run terraform validate and plan state if within a pull request
      if: type IN (pull_request)
      script:
        - echo "Executing Terraform Plan on pull request code"
        - terraform -chdir=./tf/ init $tf_init_cli_options
        - terraform -chdir=./tf/ validate $tf_validation_cli_options
        - terraform -chdir=./tf/ plan $tf_plan_cli_options

    - stage: bash script test
    # using bash script as last option because of go binary issues for terratest
      if: type IN (pull_request)
      provider: script
      script: 
        - bash server-con-test.sh

    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) AND branch = master
      script:
        - echo "Executing Terraform Apply on merged code"
        - terraform -chdir=./tf/ init $tf_init_cli_options
        - terraform -chdir=./tf/ apply $tf_apply_cli_options